// source: grpctransport/grpc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.grpctransport.AutoLikeResponse', null, global);
goog.exportSymbol('proto.grpctransport.DownloadInfoResponse', null, global);
goog.exportSymbol('proto.grpctransport.DrawBoxRequest', null, global);
goog.exportSymbol('proto.grpctransport.EmptyMessage', null, global);
goog.exportSymbol('proto.grpctransport.FitStatusResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetAutoLikeIsRunResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetDownloadInfoFromDBResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetFaceDetectRunInfoResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetLoadingPhotosResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetTokenResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetTokenTutorialResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetUsersRequest', null, global);
goog.exportSymbol('proto.grpctransport.GetUsersResponse', null, global);
goog.exportSymbol('proto.grpctransport.GetWeigthNameResponse', null, global);
goog.exportSymbol('proto.grpctransport.LikeDislikeCountPhotosFromDBResponse', null, global);
goog.exportSymbol('proto.grpctransport.LikeDislikeRequest', null, global);
goog.exportSymbol('proto.grpctransport.PassOrIgnoreRequest', null, global);
goog.exportSymbol('proto.grpctransport.PassOrIgnoreResponse', null, global);
goog.exportSymbol('proto.grpctransport.PossibilityDeleteLastLikes', null, global);
goog.exportSymbol('proto.grpctransport.PredictUserRequest', null, global);
goog.exportSymbol('proto.grpctransport.PredictUserResponse', null, global);
goog.exportSymbol('proto.grpctransport.SetDownloadPhotosRequest', null, global);
goog.exportSymbol('proto.grpctransport.SetDownloadPhotosResponse', null, global);
goog.exportSymbol('proto.grpctransport.SetLikeToNullLastNUsers', null, global);
goog.exportSymbol('proto.grpctransport.SetTokenRequest', null, global);
goog.exportSymbol('proto.grpctransport.SetTokenResponse', null, global);
goog.exportSymbol('proto.grpctransport.TrainRequest', null, global);
goog.exportSymbol('proto.grpctransport.TrainResponse', null, global);
goog.exportSymbol('proto.grpctransport.TrueFalse', null, global);
goog.exportSymbol('proto.grpctransport.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.EmptyMessage.displayName = 'proto.grpctransport.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetTokenResponse.displayName = 'proto.grpctransport.GetTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetDownloadInfoFromDBResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetDownloadInfoFromDBResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetDownloadInfoFromDBResponse.displayName = 'proto.grpctransport.GetDownloadInfoFromDBResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.SetTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.SetTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.SetTokenRequest.displayName = 'proto.grpctransport.SetTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.SetTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.SetTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.SetTokenResponse.displayName = 'proto.grpctransport.SetTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpctransport.User.repeatedFields_, null);
};
goog.inherits(proto.grpctransport.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.User.displayName = 'proto.grpctransport.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetUsersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetUsersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetUsersRequest.displayName = 'proto.grpctransport.GetUsersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpctransport.GetUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.grpctransport.GetUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetUsersResponse.displayName = 'proto.grpctransport.GetUsersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.LikeDislikeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.LikeDislikeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.LikeDislikeRequest.displayName = 'proto.grpctransport.LikeDislikeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.SetDownloadPhotosRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.SetDownloadPhotosRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.SetDownloadPhotosRequest.displayName = 'proto.grpctransport.SetDownloadPhotosRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.SetDownloadPhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.SetDownloadPhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.SetDownloadPhotosResponse.displayName = 'proto.grpctransport.SetDownloadPhotosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.DownloadInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.DownloadInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.DownloadInfoResponse.displayName = 'proto.grpctransport.DownloadInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetFaceDetectRunInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetFaceDetectRunInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetFaceDetectRunInfoResponse.displayName = 'proto.grpctransport.GetFaceDetectRunInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetLoadingPhotosResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetLoadingPhotosResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetLoadingPhotosResponse.displayName = 'proto.grpctransport.GetLoadingPhotosResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.DrawBoxRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.DrawBoxRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.DrawBoxRequest.displayName = 'proto.grpctransport.DrawBoxRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.TrueFalse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.TrueFalse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.TrueFalse.displayName = 'proto.grpctransport.TrueFalse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.PassOrIgnoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.PassOrIgnoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.PassOrIgnoreRequest.displayName = 'proto.grpctransport.PassOrIgnoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.PassOrIgnoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.PassOrIgnoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.PassOrIgnoreResponse.displayName = 'proto.grpctransport.PassOrIgnoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.SetLikeToNullLastNUsers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.SetLikeToNullLastNUsers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.SetLikeToNullLastNUsers.displayName = 'proto.grpctransport.SetLikeToNullLastNUsers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.PossibilityDeleteLastLikes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.PossibilityDeleteLastLikes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.PossibilityDeleteLastLikes.displayName = 'proto.grpctransport.PossibilityDeleteLastLikes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.PredictUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.PredictUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.PredictUserRequest.displayName = 'proto.grpctransport.PredictUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.PredictUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.PredictUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.PredictUserResponse.displayName = 'proto.grpctransport.PredictUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.TrainRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.TrainRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.TrainRequest.displayName = 'proto.grpctransport.TrainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.TrainResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.TrainResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.TrainResponse.displayName = 'proto.grpctransport.TrainResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.FitStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.FitStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.FitStatusResponse.displayName = 'proto.grpctransport.FitStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.AutoLikeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.grpctransport.AutoLikeResponse.repeatedFields_, null);
};
goog.inherits(proto.grpctransport.AutoLikeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.AutoLikeResponse.displayName = 'proto.grpctransport.AutoLikeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetAutoLikeIsRunResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetAutoLikeIsRunResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetAutoLikeIsRunResponse.displayName = 'proto.grpctransport.GetAutoLikeIsRunResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetWeigthNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetWeigthNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetWeigthNameResponse.displayName = 'proto.grpctransport.GetWeigthNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.LikeDislikeCountPhotosFromDBResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.displayName = 'proto.grpctransport.LikeDislikeCountPhotosFromDBResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.grpctransport.GetTokenTutorialResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.grpctransport.GetTokenTutorialResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.grpctransport.GetTokenTutorialResponse.displayName = 'proto.grpctransport.GetTokenTutorialResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.EmptyMessage}
 */
proto.grpctransport.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.EmptyMessage;
  return proto.grpctransport.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.EmptyMessage}
 */
proto.grpctransport.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualtoken: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetTokenResponse}
 */
proto.grpctransport.GetTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetTokenResponse;
  return proto.grpctransport.GetTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetTokenResponse}
 */
proto.grpctransport.GetTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActualtoken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualtoken();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool ActualToken = 1;
 * @return {boolean}
 */
proto.grpctransport.GetTokenResponse.prototype.getActualtoken = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetTokenResponse} returns this
 */
proto.grpctransport.GetTokenResponse.prototype.setActualtoken = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string Token = 2;
 * @return {string}
 */
proto.grpctransport.GetTokenResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpctransport.GetTokenResponse} returns this
 */
proto.grpctransport.GetTokenResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetDownloadInfoFromDBResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetDownloadInfoFromDBResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nndatasetcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nndatasetaccountscount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nndatasetswipedaccountscount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nndatasetswipedphotoscount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    downloadedaccountscount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    downloadedphotoscount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    rundownload: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetDownloadInfoFromDBResponse;
  return proto.grpctransport.GetDownloadInfoFromDBResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetDownloadInfoFromDBResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNndatasetcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNndatasetaccountscount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNndatasetswipedaccountscount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNndatasetswipedphotoscount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDownloadedaccountscount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDownloadedphotoscount(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRundownload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetDownloadInfoFromDBResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetDownloadInfoFromDBResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNndatasetcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNndatasetaccountscount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNndatasetswipedaccountscount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNndatasetswipedphotoscount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDownloadedaccountscount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getDownloadedphotoscount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getRundownload();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 NNDataSetCount = 1;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getNndatasetcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setNndatasetcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 NNDataSetAccountsCount = 2;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getNndatasetaccountscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setNndatasetaccountscount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 NNDataSetSwipedAccountsCount = 3;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getNndatasetswipedaccountscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setNndatasetswipedaccountscount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 NNDataSetSwipedPhotosCount = 4;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getNndatasetswipedphotoscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setNndatasetswipedphotoscount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 DownloadedAccountsCount = 5;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getDownloadedaccountscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setDownloadedaccountscount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 DownloadedPhotosCount = 6;
 * @return {number}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getDownloadedphotoscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setDownloadedphotoscount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool RunDownload = 7;
 * @return {boolean}
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.getRundownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetDownloadInfoFromDBResponse} returns this
 */
proto.grpctransport.GetDownloadInfoFromDBResponse.prototype.setRundownload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.SetTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.SetTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.SetTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.SetTokenRequest}
 */
proto.grpctransport.SetTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.SetTokenRequest;
  return proto.grpctransport.SetTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.SetTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.SetTokenRequest}
 */
proto.grpctransport.SetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.SetTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.SetTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.SetTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Token = 1;
 * @return {string}
 */
proto.grpctransport.SetTokenRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpctransport.SetTokenRequest} returns this
 */
proto.grpctransport.SetTokenRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.SetTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.SetTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.SetTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    actualtoken: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.SetTokenResponse}
 */
proto.grpctransport.SetTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.SetTokenResponse;
  return proto.grpctransport.SetTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.SetTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.SetTokenResponse}
 */
proto.grpctransport.SetTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActualtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.SetTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.SetTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.SetTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActualtoken();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool ActualToken = 1;
 * @return {boolean}
 */
proto.grpctransport.SetTokenResponse.prototype.getActualtoken = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.SetTokenResponse} returns this
 */
proto.grpctransport.SetTokenResponse.prototype.setActualtoken = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpctransport.User.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.User.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    picList: msg.getPicList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.User}
 */
proto.grpctransport.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.User;
  return proto.grpctransport.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.User}
 */
proto.grpctransport.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPicList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional int32 UserID = 1;
 * @return {number}
 */
proto.grpctransport.User.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.User} returns this
 */
proto.grpctransport.User.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated bytes Pic = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.grpctransport.User.prototype.getPicList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes Pic = 2;
 * This is a type-conversion wrapper around `getPicList()`
 * @return {!Array<string>}
 */
proto.grpctransport.User.prototype.getPicList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPicList()));
};


/**
 * repeated bytes Pic = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPicList()`
 * @return {!Array<!Uint8Array>}
 */
proto.grpctransport.User.prototype.getPicList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPicList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.grpctransport.User} returns this
 */
proto.grpctransport.User.prototype.setPicList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.grpctransport.User} returns this
 */
proto.grpctransport.User.prototype.addPic = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpctransport.User} returns this
 */
proto.grpctransport.User.prototype.clearPicList = function() {
  return this.setPicList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetUsersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetUsersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetUsersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetUsersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromuserid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    countofusers: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetUsersRequest}
 */
proto.grpctransport.GetUsersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetUsersRequest;
  return proto.grpctransport.GetUsersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetUsersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetUsersRequest}
 */
proto.grpctransport.GetUsersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromuserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountofusers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetUsersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetUsersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetUsersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetUsersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromuserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCountofusers();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 FromUserID = 1;
 * @return {number}
 */
proto.grpctransport.GetUsersRequest.prototype.getFromuserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetUsersRequest} returns this
 */
proto.grpctransport.GetUsersRequest.prototype.setFromuserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 CountOfUsers = 2;
 * @return {number}
 */
proto.grpctransport.GetUsersRequest.prototype.getCountofusers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetUsersRequest} returns this
 */
proto.grpctransport.GetUsersRequest.prototype.setCountofusers = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpctransport.GetUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.grpctransport.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetUsersResponse}
 */
proto.grpctransport.GetUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetUsersResponse;
  return proto.grpctransport.GetUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetUsersResponse}
 */
proto.grpctransport.GetUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.grpctransport.User;
      reader.readMessage(value,proto.grpctransport.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.grpctransport.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User Users = 1;
 * @return {!Array<!proto.grpctransport.User>}
 */
proto.grpctransport.GetUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.grpctransport.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.grpctransport.User, 1));
};


/**
 * @param {!Array<!proto.grpctransport.User>} value
 * @return {!proto.grpctransport.GetUsersResponse} returns this
*/
proto.grpctransport.GetUsersResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.grpctransport.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.grpctransport.User}
 */
proto.grpctransport.GetUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.grpctransport.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpctransport.GetUsersResponse} returns this
 */
proto.grpctransport.GetUsersResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.LikeDislikeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.LikeDislikeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.LikeDislikeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.LikeDislikeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    likedislike: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.LikeDislikeRequest}
 */
proto.grpctransport.LikeDislikeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.LikeDislikeRequest;
  return proto.grpctransport.LikeDislikeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.LikeDislikeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.LikeDislikeRequest}
 */
proto.grpctransport.LikeDislikeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLikedislike(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.LikeDislikeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.LikeDislikeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.LikeDislikeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.LikeDislikeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLikedislike();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 UserId = 1;
 * @return {number}
 */
proto.grpctransport.LikeDislikeRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.LikeDislikeRequest} returns this
 */
proto.grpctransport.LikeDislikeRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool LikeDislike = 2;
 * @return {boolean}
 */
proto.grpctransport.LikeDislikeRequest.prototype.getLikedislike = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.LikeDislikeRequest} returns this
 */
proto.grpctransport.LikeDislikeRequest.prototype.setLikedislike = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.SetDownloadPhotosRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.SetDownloadPhotosRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.SetDownloadPhotosRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetDownloadPhotosRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    photoscount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.SetDownloadPhotosRequest}
 */
proto.grpctransport.SetDownloadPhotosRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.SetDownloadPhotosRequest;
  return proto.grpctransport.SetDownloadPhotosRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.SetDownloadPhotosRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.SetDownloadPhotosRequest}
 */
proto.grpctransport.SetDownloadPhotosRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhotoscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.SetDownloadPhotosRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.SetDownloadPhotosRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.SetDownloadPhotosRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetDownloadPhotosRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotoscount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 PhotosCount = 1;
 * @return {number}
 */
proto.grpctransport.SetDownloadPhotosRequest.prototype.getPhotoscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.SetDownloadPhotosRequest} returns this
 */
proto.grpctransport.SetDownloadPhotosRequest.prototype.setPhotoscount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.SetDownloadPhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.SetDownloadPhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetDownloadPhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nnservicerun: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    successrun: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.SetDownloadPhotosResponse}
 */
proto.grpctransport.SetDownloadPhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.SetDownloadPhotosResponse;
  return proto.grpctransport.SetDownloadPhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.SetDownloadPhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.SetDownloadPhotosResponse}
 */
proto.grpctransport.SetDownloadPhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNnservicerun(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessrun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.SetDownloadPhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.SetDownloadPhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetDownloadPhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNnservicerun();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSuccessrun();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool NNServiceRun = 1;
 * @return {boolean}
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.getNnservicerun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.SetDownloadPhotosResponse} returns this
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.setNnservicerun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool SuccessRun = 2;
 * @return {boolean}
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.getSuccessrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.SetDownloadPhotosResponse} returns this
 */
proto.grpctransport.SetDownloadPhotosResponse.prototype.setSuccessrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.DownloadInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.DownloadInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.DownloadInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.DownloadInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    newaccounts: jspb.Message.getFieldWithDefault(msg, 1, 0),
    updateaccounts: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sameaccounts: jspb.Message.getFieldWithDefault(msg, 3, 0),
    matchingaccounts: jspb.Message.getFieldWithDefault(msg, 4, 0),
    photosnow: jspb.Message.getFieldWithDefault(msg, 5, 0),
    countofdownloadedphotos: jspb.Message.getFieldWithDefault(msg, 6, 0),
    countofsamephotos: jspb.Message.getFieldWithDefault(msg, 7, 0),
    countofmissingphotos: jspb.Message.getFieldWithDefault(msg, 8, 0),
    matchingnnphotoscount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    errphotoscount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    successdownload: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    rundownload: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.DownloadInfoResponse}
 */
proto.grpctransport.DownloadInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.DownloadInfoResponse;
  return proto.grpctransport.DownloadInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.DownloadInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.DownloadInfoResponse}
 */
proto.grpctransport.DownloadInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewaccounts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdateaccounts(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSameaccounts(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMatchingaccounts(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhotosnow(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountofdownloadedphotos(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountofsamephotos(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountofmissingphotos(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMatchingnnphotoscount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrphotoscount(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessdownload(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRundownload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.DownloadInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.DownloadInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.DownloadInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.DownloadInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewaccounts();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpdateaccounts();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSameaccounts();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMatchingaccounts();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPhotosnow();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCountofdownloadedphotos();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCountofsamephotos();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCountofmissingphotos();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMatchingnnphotoscount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getErrphotoscount();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getSuccessdownload();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getRundownload();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional int32 NewAccounts = 1;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getNewaccounts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setNewaccounts = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 UpdateAccounts = 2;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getUpdateaccounts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setUpdateaccounts = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 SameAccounts = 3;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getSameaccounts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setSameaccounts = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 MatchingAccounts = 4;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getMatchingaccounts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setMatchingaccounts = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 PhotosNow = 5;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getPhotosnow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setPhotosnow = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 CountOfDownloadedPhotos = 6;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getCountofdownloadedphotos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setCountofdownloadedphotos = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 CountOfSamePhotos = 7;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getCountofsamephotos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setCountofsamephotos = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 CountOfMissingPhotos = 8;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getCountofmissingphotos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setCountofmissingphotos = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 MatchingNNPhotosCount = 9;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getMatchingnnphotoscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setMatchingnnphotoscount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 ErrPhotosCount = 10;
 * @return {number}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getErrphotoscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setErrphotoscount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool SuccessDownload = 11;
 * @return {boolean}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getSuccessdownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setSuccessdownload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool RunDownload = 12;
 * @return {boolean}
 */
proto.grpctransport.DownloadInfoResponse.prototype.getRundownload = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.DownloadInfoResponse} returns this
 */
proto.grpctransport.DownloadInfoResponse.prototype.setRundownload = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetFaceDetectRunInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetFaceDetectRunInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    facedetectrun: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetFaceDetectRunInfoResponse}
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetFaceDetectRunInfoResponse;
  return proto.grpctransport.GetFaceDetectRunInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetFaceDetectRunInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetFaceDetectRunInfoResponse}
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFacedetectrun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetFaceDetectRunInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetFaceDetectRunInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFacedetectrun();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool FaceDetectRun = 1;
 * @return {boolean}
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.prototype.getFacedetectrun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetFaceDetectRunInfoResponse} returns this
 */
proto.grpctransport.GetFaceDetectRunInfoResponse.prototype.setFacedetectrun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetLoadingPhotosResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetLoadingPhotosResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetLoadingPhotosResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    truenew: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    truephoto: msg.getTruephoto_asB64(),
    falsenew: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    falsephoto: msg.getFalsephoto_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetLoadingPhotosResponse}
 */
proto.grpctransport.GetLoadingPhotosResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetLoadingPhotosResponse;
  return proto.grpctransport.GetLoadingPhotosResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetLoadingPhotosResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetLoadingPhotosResponse}
 */
proto.grpctransport.GetLoadingPhotosResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTruenew(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTruephoto(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFalsenew(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFalsephoto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetLoadingPhotosResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetLoadingPhotosResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetLoadingPhotosResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTruenew();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTruephoto_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getFalsenew();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFalsephoto_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bool TrueNew = 1;
 * @return {boolean}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getTruenew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetLoadingPhotosResponse} returns this
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.setTruenew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bytes TruePhoto = 2;
 * @return {!(string|Uint8Array)}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getTruephoto = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes TruePhoto = 2;
 * This is a type-conversion wrapper around `getTruephoto()`
 * @return {string}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getTruephoto_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTruephoto()));
};


/**
 * optional bytes TruePhoto = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTruephoto()`
 * @return {!Uint8Array}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getTruephoto_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTruephoto()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grpctransport.GetLoadingPhotosResponse} returns this
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.setTruephoto = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bool FalseNew = 3;
 * @return {boolean}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getFalsenew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetLoadingPhotosResponse} returns this
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.setFalsenew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bytes FalsePhoto = 4;
 * @return {!(string|Uint8Array)}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getFalsephoto = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes FalsePhoto = 4;
 * This is a type-conversion wrapper around `getFalsephoto()`
 * @return {string}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getFalsephoto_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFalsephoto()));
};


/**
 * optional bytes FalsePhoto = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFalsephoto()`
 * @return {!Uint8Array}
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.getFalsephoto_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFalsephoto()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grpctransport.GetLoadingPhotosResponse} returns this
 */
proto.grpctransport.GetLoadingPhotosResponse.prototype.setFalsephoto = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.DrawBoxRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.DrawBoxRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.DrawBoxRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.DrawBoxRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    drawbox: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.DrawBoxRequest}
 */
proto.grpctransport.DrawBoxRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.DrawBoxRequest;
  return proto.grpctransport.DrawBoxRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.DrawBoxRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.DrawBoxRequest}
 */
proto.grpctransport.DrawBoxRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDrawbox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.DrawBoxRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.DrawBoxRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.DrawBoxRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.DrawBoxRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDrawbox();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool Set = 1;
 * @return {boolean}
 */
proto.grpctransport.DrawBoxRequest.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.DrawBoxRequest} returns this
 */
proto.grpctransport.DrawBoxRequest.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool DrawBox = 2;
 * @return {boolean}
 */
proto.grpctransport.DrawBoxRequest.prototype.getDrawbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.DrawBoxRequest} returns this
 */
proto.grpctransport.DrawBoxRequest.prototype.setDrawbox = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.TrueFalse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.TrueFalse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.TrueFalse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrueFalse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_boolean: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.TrueFalse}
 */
proto.grpctransport.TrueFalse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.TrueFalse;
  return proto.grpctransport.TrueFalse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.TrueFalse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.TrueFalse}
 */
proto.grpctransport.TrueFalse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolean(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.TrueFalse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.TrueFalse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.TrueFalse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrueFalse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoolean();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Boolean = 1;
 * @return {boolean}
 */
proto.grpctransport.TrueFalse.prototype.getBoolean = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.TrueFalse} returns this
 */
proto.grpctransport.TrueFalse.prototype.setBoolean = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.PassOrIgnoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.PassOrIgnoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PassOrIgnoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    pass: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.PassOrIgnoreRequest}
 */
proto.grpctransport.PassOrIgnoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.PassOrIgnoreRequest;
  return proto.grpctransport.PassOrIgnoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.PassOrIgnoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.PassOrIgnoreRequest}
 */
proto.grpctransport.PassOrIgnoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.PassOrIgnoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.PassOrIgnoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PassOrIgnoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPass();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bool Set = 1;
 * @return {boolean}
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.PassOrIgnoreRequest} returns this
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Pass = 2;
 * @return {boolean}
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.getPass = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.PassOrIgnoreRequest} returns this
 */
proto.grpctransport.PassOrIgnoreRequest.prototype.setPass = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.PassOrIgnoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.PassOrIgnoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.PassOrIgnoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PassOrIgnoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pass: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.PassOrIgnoreResponse}
 */
proto.grpctransport.PassOrIgnoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.PassOrIgnoreResponse;
  return proto.grpctransport.PassOrIgnoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.PassOrIgnoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.PassOrIgnoreResponse}
 */
proto.grpctransport.PassOrIgnoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.PassOrIgnoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.PassOrIgnoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.PassOrIgnoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PassOrIgnoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPass();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Pass = 1;
 * @return {boolean}
 */
proto.grpctransport.PassOrIgnoreResponse.prototype.getPass = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.PassOrIgnoreResponse} returns this
 */
proto.grpctransport.PassOrIgnoreResponse.prototype.setPass = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.SetLikeToNullLastNUsers.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.SetLikeToNullLastNUsers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.SetLikeToNullLastNUsers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetLikeToNullLastNUsers.toObject = function(includeInstance, msg) {
  var f, obj = {
    countlastusers: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.SetLikeToNullLastNUsers}
 */
proto.grpctransport.SetLikeToNullLastNUsers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.SetLikeToNullLastNUsers;
  return proto.grpctransport.SetLikeToNullLastNUsers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.SetLikeToNullLastNUsers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.SetLikeToNullLastNUsers}
 */
proto.grpctransport.SetLikeToNullLastNUsers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountlastusers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.SetLikeToNullLastNUsers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.SetLikeToNullLastNUsers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.SetLikeToNullLastNUsers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.SetLikeToNullLastNUsers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountlastusers();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 countLastUsers = 1;
 * @return {number}
 */
proto.grpctransport.SetLikeToNullLastNUsers.prototype.getCountlastusers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.SetLikeToNullLastNUsers} returns this
 */
proto.grpctransport.SetLikeToNullLastNUsers.prototype.setCountlastusers = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.PossibilityDeleteLastLikes.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.PossibilityDeleteLastLikes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.PossibilityDeleteLastLikes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PossibilityDeleteLastLikes.toObject = function(includeInstance, msg) {
  var f, obj = {
    possibility: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.PossibilityDeleteLastLikes}
 */
proto.grpctransport.PossibilityDeleteLastLikes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.PossibilityDeleteLastLikes;
  return proto.grpctransport.PossibilityDeleteLastLikes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.PossibilityDeleteLastLikes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.PossibilityDeleteLastLikes}
 */
proto.grpctransport.PossibilityDeleteLastLikes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPossibility(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.PossibilityDeleteLastLikes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.PossibilityDeleteLastLikes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.PossibilityDeleteLastLikes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PossibilityDeleteLastLikes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPossibility();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Possibility = 1;
 * @return {boolean}
 */
proto.grpctransport.PossibilityDeleteLastLikes.prototype.getPossibility = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.PossibilityDeleteLastLikes} returns this
 */
proto.grpctransport.PossibilityDeleteLastLikes.prototype.setPossibility = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.PredictUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.PredictUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.PredictUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PredictUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.PredictUserRequest}
 */
proto.grpctransport.PredictUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.PredictUserRequest;
  return proto.grpctransport.PredictUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.PredictUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.PredictUserRequest}
 */
proto.grpctransport.PredictUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.PredictUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.PredictUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.PredictUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PredictUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 UserId = 1;
 * @return {number}
 */
proto.grpctransport.PredictUserRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.PredictUserRequest} returns this
 */
proto.grpctransport.PredictUserRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.PredictUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.PredictUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.PredictUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PredictUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    likepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    dislikepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.PredictUserResponse}
 */
proto.grpctransport.PredictUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.PredictUserResponse;
  return proto.grpctransport.PredictUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.PredictUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.PredictUserResponse}
 */
proto.grpctransport.PredictUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLikepercent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDislikepercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.PredictUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.PredictUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.PredictUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.PredictUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLikepercent();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDislikepercent();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional int32 UserId = 1;
 * @return {number}
 */
proto.grpctransport.PredictUserResponse.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.PredictUserResponse} returns this
 */
proto.grpctransport.PredictUserResponse.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float LikePercent = 2;
 * @return {number}
 */
proto.grpctransport.PredictUserResponse.prototype.getLikepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.PredictUserResponse} returns this
 */
proto.grpctransport.PredictUserResponse.prototype.setLikepercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float DislikePercent = 3;
 * @return {number}
 */
proto.grpctransport.PredictUserResponse.prototype.getDislikepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.PredictUserResponse} returns this
 */
proto.grpctransport.PredictUserResponse.prototype.setDislikepercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.TrainRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.TrainRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.TrainRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrainRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countofepochs: jspb.Message.getFieldWithDefault(msg, 1, 0),
    alignds: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.TrainRequest}
 */
proto.grpctransport.TrainRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.TrainRequest;
  return proto.grpctransport.TrainRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.TrainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.TrainRequest}
 */
proto.grpctransport.TrainRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountofepochs(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlignds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.TrainRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.TrainRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.TrainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrainRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountofepochs();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAlignds();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 CountOfEpochs = 1;
 * @return {number}
 */
proto.grpctransport.TrainRequest.prototype.getCountofepochs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.TrainRequest} returns this
 */
proto.grpctransport.TrainRequest.prototype.setCountofepochs = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool AlignDS = 2;
 * @return {boolean}
 */
proto.grpctransport.TrainRequest.prototype.getAlignds = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.TrainRequest} returns this
 */
proto.grpctransport.TrainRequest.prototype.setAlignds = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.TrainResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.TrainResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.TrainResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrainResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    trainingnow: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    allepochcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    allbatchcount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.TrainResponse}
 */
proto.grpctransport.TrainResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.TrainResponse;
  return proto.grpctransport.TrainResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.TrainResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.TrainResponse}
 */
proto.grpctransport.TrainResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTrainingnow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAllepochcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAllbatchcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.TrainResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.TrainResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.TrainResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.TrainResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrainingnow();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getAllepochcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAllbatchcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool TrainingNow = 1;
 * @return {boolean}
 */
proto.grpctransport.TrainResponse.prototype.getTrainingnow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.TrainResponse} returns this
 */
proto.grpctransport.TrainResponse.prototype.setTrainingnow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 AllEpochCount = 2;
 * @return {number}
 */
proto.grpctransport.TrainResponse.prototype.getAllepochcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.TrainResponse} returns this
 */
proto.grpctransport.TrainResponse.prototype.setAllepochcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 AllBatchCount = 3;
 * @return {number}
 */
proto.grpctransport.TrainResponse.prototype.getAllbatchcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.TrainResponse} returns this
 */
proto.grpctransport.TrainResponse.prototype.setAllbatchcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.FitStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.FitStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.FitStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.FitStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 1, 0),
    batch: jspb.Message.getFieldWithDefault(msg, 2, 0),
    training: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.FitStatusResponse}
 */
proto.grpctransport.FitStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.FitStatusResponse;
  return proto.grpctransport.FitStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.FitStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.FitStatusResponse}
 */
proto.grpctransport.FitStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEpoch(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatch(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTraining(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.FitStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.FitStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.FitStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.FitStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBatch();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTraining();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int32 Epoch = 1;
 * @return {number}
 */
proto.grpctransport.FitStatusResponse.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.FitStatusResponse} returns this
 */
proto.grpctransport.FitStatusResponse.prototype.setEpoch = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Batch = 2;
 * @return {number}
 */
proto.grpctransport.FitStatusResponse.prototype.getBatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.FitStatusResponse} returns this
 */
proto.grpctransport.FitStatusResponse.prototype.setBatch = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool Training = 3;
 * @return {boolean}
 */
proto.grpctransport.FitStatusResponse.prototype.getTraining = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.FitStatusResponse} returns this
 */
proto.grpctransport.FitStatusResponse.prototype.setTraining = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.grpctransport.AutoLikeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.AutoLikeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.AutoLikeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.AutoLikeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.AutoLikeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    photosList: msg.getPhotosList_asB64(),
    likepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    dislikepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    successautolike: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    errorautolike: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.AutoLikeResponse}
 */
proto.grpctransport.AutoLikeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.AutoLikeResponse;
  return proto.grpctransport.AutoLikeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.AutoLikeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.AutoLikeResponse}
 */
proto.grpctransport.AutoLikeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPhotos(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLikepercent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDislikepercent(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccessautolike(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorautolike(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.AutoLikeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.AutoLikeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.AutoLikeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.AutoLikeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhotosList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getLikepercent();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDislikepercent();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getSuccessautolike();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getErrorautolike();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated bytes Photos = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.grpctransport.AutoLikeResponse.prototype.getPhotosList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes Photos = 1;
 * This is a type-conversion wrapper around `getPhotosList()`
 * @return {!Array<string>}
 */
proto.grpctransport.AutoLikeResponse.prototype.getPhotosList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPhotosList()));
};


/**
 * repeated bytes Photos = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPhotosList()`
 * @return {!Array<!Uint8Array>}
 */
proto.grpctransport.AutoLikeResponse.prototype.getPhotosList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPhotosList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.setPhotosList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.addPhotos = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.clearPhotosList = function() {
  return this.setPhotosList([]);
};


/**
 * optional float LikePercent = 2;
 * @return {number}
 */
proto.grpctransport.AutoLikeResponse.prototype.getLikepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.setLikepercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float DislikePercent = 3;
 * @return {number}
 */
proto.grpctransport.AutoLikeResponse.prototype.getDislikepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.setDislikepercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool SuccessAutoLike = 4;
 * @return {boolean}
 */
proto.grpctransport.AutoLikeResponse.prototype.getSuccessautolike = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.setSuccessautolike = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool ErrorAutoLike = 5;
 * @return {boolean}
 */
proto.grpctransport.AutoLikeResponse.prototype.getErrorautolike = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.AutoLikeResponse} returns this
 */
proto.grpctransport.AutoLikeResponse.prototype.setErrorautolike = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetAutoLikeIsRunResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetAutoLikeIsRunResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetAutoLikeIsRunResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    autolikerun: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    likedcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dislikedcount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetAutoLikeIsRunResponse}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetAutoLikeIsRunResponse;
  return proto.grpctransport.GetAutoLikeIsRunResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetAutoLikeIsRunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetAutoLikeIsRunResponse}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutolikerun(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLikedcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDislikedcount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetAutoLikeIsRunResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetAutoLikeIsRunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetAutoLikeIsRunResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutolikerun();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getLikedcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDislikedcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool AutoLikeRun = 1;
 * @return {boolean}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.getAutolikerun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.grpctransport.GetAutoLikeIsRunResponse} returns this
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.setAutolikerun = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 LikedCount = 2;
 * @return {number}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.getLikedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetAutoLikeIsRunResponse} returns this
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.setLikedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 DislikedCount = 3;
 * @return {number}
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.getDislikedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.GetAutoLikeIsRunResponse} returns this
 */
proto.grpctransport.GetAutoLikeIsRunResponse.prototype.setDislikedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetWeigthNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetWeigthNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetWeigthNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetWeigthNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    weigthname: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetWeigthNameResponse}
 */
proto.grpctransport.GetWeigthNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetWeigthNameResponse;
  return proto.grpctransport.GetWeigthNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetWeigthNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetWeigthNameResponse}
 */
proto.grpctransport.GetWeigthNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeigthname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetWeigthNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetWeigthNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetWeigthNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetWeigthNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeigthname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string WeigthName = 1;
 * @return {string}
 */
proto.grpctransport.GetWeigthNameResponse.prototype.getWeigthname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.grpctransport.GetWeigthNameResponse} returns this
 */
proto.grpctransport.GetWeigthNameResponse.prototype.setWeigthname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    likecount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dislikecount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.LikeDislikeCountPhotosFromDBResponse;
  return proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLikecount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDislikecount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLikecount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDislikecount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 LikeCount = 1;
 * @return {number}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.getLikecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse} returns this
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.setLikecount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 DislikeCount = 2;
 * @return {number}
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.getDislikecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.grpctransport.LikeDislikeCountPhotosFromDBResponse} returns this
 */
proto.grpctransport.LikeDislikeCountPhotosFromDBResponse.prototype.setDislikecount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.grpctransport.GetTokenTutorialResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.grpctransport.GetTokenTutorialResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetTokenTutorialResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokentutorial: msg.getTokentutorial_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.grpctransport.GetTokenTutorialResponse}
 */
proto.grpctransport.GetTokenTutorialResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.grpctransport.GetTokenTutorialResponse;
  return proto.grpctransport.GetTokenTutorialResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.grpctransport.GetTokenTutorialResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.grpctransport.GetTokenTutorialResponse}
 */
proto.grpctransport.GetTokenTutorialResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTokentutorial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.grpctransport.GetTokenTutorialResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.grpctransport.GetTokenTutorialResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.grpctransport.GetTokenTutorialResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokentutorial_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes TokenTutorial = 1;
 * @return {!(string|Uint8Array)}
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.getTokentutorial = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes TokenTutorial = 1;
 * This is a type-conversion wrapper around `getTokentutorial()`
 * @return {string}
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.getTokentutorial_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTokentutorial()));
};


/**
 * optional bytes TokenTutorial = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTokentutorial()`
 * @return {!Uint8Array}
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.getTokentutorial_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTokentutorial()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.grpctransport.GetTokenTutorialResponse} returns this
 */
proto.grpctransport.GetTokenTutorialResponse.prototype.setTokentutorial = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.grpctransport);
