// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: grpctransport/grpc.proto

package grpctransport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{0}
}

type GetTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualToken bool   `protobuf:"varint,1,opt,name=ActualToken,proto3" json:"ActualToken,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenResponse) GetActualToken() bool {
	if x != nil {
		return x.ActualToken
	}
	return false
}

func (x *GetTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetDownloadInfoFromDBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NNDataSetCount               int32 `protobuf:"varint,1,opt,name=NNDataSetCount,proto3" json:"NNDataSetCount,omitempty"`
	NNDataSetAccountsCount       int32 `protobuf:"varint,2,opt,name=NNDataSetAccountsCount,proto3" json:"NNDataSetAccountsCount,omitempty"`
	NNDataSetSwipedAccountsCount int32 `protobuf:"varint,3,opt,name=NNDataSetSwipedAccountsCount,proto3" json:"NNDataSetSwipedAccountsCount,omitempty"`
	NNDataSetSwipedPhotosCount   int32 `protobuf:"varint,4,opt,name=NNDataSetSwipedPhotosCount,proto3" json:"NNDataSetSwipedPhotosCount,omitempty"`
	DownloadedAccountsCount      int32 `protobuf:"varint,5,opt,name=DownloadedAccountsCount,proto3" json:"DownloadedAccountsCount,omitempty"`
	DownloadedPhotosCount        int32 `protobuf:"varint,6,opt,name=DownloadedPhotosCount,proto3" json:"DownloadedPhotosCount,omitempty"`
	RunDownload                  bool  `protobuf:"varint,7,opt,name=RunDownload,proto3" json:"RunDownload,omitempty"`
}

func (x *GetDownloadInfoFromDBResponse) Reset() {
	*x = GetDownloadInfoFromDBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadInfoFromDBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadInfoFromDBResponse) ProtoMessage() {}

func (x *GetDownloadInfoFromDBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadInfoFromDBResponse.ProtoReflect.Descriptor instead.
func (*GetDownloadInfoFromDBResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetDownloadInfoFromDBResponse) GetNNDataSetCount() int32 {
	if x != nil {
		return x.NNDataSetCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetNNDataSetAccountsCount() int32 {
	if x != nil {
		return x.NNDataSetAccountsCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetNNDataSetSwipedAccountsCount() int32 {
	if x != nil {
		return x.NNDataSetSwipedAccountsCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetNNDataSetSwipedPhotosCount() int32 {
	if x != nil {
		return x.NNDataSetSwipedPhotosCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetDownloadedAccountsCount() int32 {
	if x != nil {
		return x.DownloadedAccountsCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetDownloadedPhotosCount() int32 {
	if x != nil {
		return x.DownloadedPhotosCount
	}
	return 0
}

func (x *GetDownloadInfoFromDBResponse) GetRunDownload() bool {
	if x != nil {
		return x.RunDownload
	}
	return false
}

type SetTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *SetTokenRequest) Reset() {
	*x = SetTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTokenRequest) ProtoMessage() {}

func (x *SetTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTokenRequest.ProtoReflect.Descriptor instead.
func (*SetTokenRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *SetTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SetTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualToken bool `protobuf:"varint,1,opt,name=ActualToken,proto3" json:"ActualToken,omitempty"`
}

func (x *SetTokenResponse) Reset() {
	*x = SetTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTokenResponse) ProtoMessage() {}

func (x *SetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTokenResponse.ProtoReflect.Descriptor instead.
func (*SetTokenResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *SetTokenResponse) GetActualToken() bool {
	if x != nil {
		return x.ActualToken
	}
	return false
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Pic    [][]byte `protobuf:"bytes,2,rep,name=Pic,proto3" json:"Pic,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *User) GetPic() [][]byte {
	if x != nil {
		return x.Pic
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID   int32 `protobuf:"varint,1,opt,name=FromUserID,proto3" json:"FromUserID,omitempty"`
	CountOfUsers int32 `protobuf:"varint,2,opt,name=CountOfUsers,proto3" json:"CountOfUsers,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *GetUsersRequest) GetFromUserID() int32 {
	if x != nil {
		return x.FromUserID
	}
	return 0
}

func (x *GetUsersRequest) GetCountOfUsers() int32 {
	if x != nil {
		return x.CountOfUsers
	}
	return 0
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type LikeDislikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	LikeDislike bool  `protobuf:"varint,2,opt,name=LikeDislike,proto3" json:"LikeDislike,omitempty"`
}

func (x *LikeDislikeRequest) Reset() {
	*x = LikeDislikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeDislikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeDislikeRequest) ProtoMessage() {}

func (x *LikeDislikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeDislikeRequest.ProtoReflect.Descriptor instead.
func (*LikeDislikeRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *LikeDislikeRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LikeDislikeRequest) GetLikeDislike() bool {
	if x != nil {
		return x.LikeDislike
	}
	return false
}

type SetDownloadPhotosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotosCount int32 `protobuf:"varint,1,opt,name=PhotosCount,proto3" json:"PhotosCount,omitempty"`
}

func (x *SetDownloadPhotosRequest) Reset() {
	*x = SetDownloadPhotosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDownloadPhotosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDownloadPhotosRequest) ProtoMessage() {}

func (x *SetDownloadPhotosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDownloadPhotosRequest.ProtoReflect.Descriptor instead.
func (*SetDownloadPhotosRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *SetDownloadPhotosRequest) GetPhotosCount() int32 {
	if x != nil {
		return x.PhotosCount
	}
	return 0
}

type SetDownloadPhotosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NNServiceRun bool `protobuf:"varint,1,opt,name=NNServiceRun,proto3" json:"NNServiceRun,omitempty"`
	SuccessRun   bool `protobuf:"varint,2,opt,name=SuccessRun,proto3" json:"SuccessRun,omitempty"`
}

func (x *SetDownloadPhotosResponse) Reset() {
	*x = SetDownloadPhotosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDownloadPhotosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDownloadPhotosResponse) ProtoMessage() {}

func (x *SetDownloadPhotosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDownloadPhotosResponse.ProtoReflect.Descriptor instead.
func (*SetDownloadPhotosResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *SetDownloadPhotosResponse) GetNNServiceRun() bool {
	if x != nil {
		return x.NNServiceRun
	}
	return false
}

func (x *SetDownloadPhotosResponse) GetSuccessRun() bool {
	if x != nil {
		return x.SuccessRun
	}
	return false
}

type DownloadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewAccounts             int32 `protobuf:"varint,1,opt,name=NewAccounts,proto3" json:"NewAccounts,omitempty"`
	UpdateAccounts          int32 `protobuf:"varint,2,opt,name=UpdateAccounts,proto3" json:"UpdateAccounts,omitempty"`
	SameAccounts            int32 `protobuf:"varint,3,opt,name=SameAccounts,proto3" json:"SameAccounts,omitempty"`
	MatchingAccounts        int32 `protobuf:"varint,4,opt,name=MatchingAccounts,proto3" json:"MatchingAccounts,omitempty"`
	PhotosNow               int32 `protobuf:"varint,5,opt,name=PhotosNow,proto3" json:"PhotosNow,omitempty"`
	CountOfDownloadedPhotos int32 `protobuf:"varint,6,opt,name=CountOfDownloadedPhotos,proto3" json:"CountOfDownloadedPhotos,omitempty"`
	CountOfSamePhotos       int32 `protobuf:"varint,7,opt,name=CountOfSamePhotos,proto3" json:"CountOfSamePhotos,omitempty"`
	CountOfMissingPhotos    int32 `protobuf:"varint,8,opt,name=CountOfMissingPhotos,proto3" json:"CountOfMissingPhotos,omitempty"`
	MatchingNNPhotosCount   int32 `protobuf:"varint,9,opt,name=MatchingNNPhotosCount,proto3" json:"MatchingNNPhotosCount,omitempty"`
	ErrPhotosCount          int32 `protobuf:"varint,10,opt,name=ErrPhotosCount,proto3" json:"ErrPhotosCount,omitempty"`
	SuccessDownload         bool  `protobuf:"varint,11,opt,name=SuccessDownload,proto3" json:"SuccessDownload,omitempty"`
	RunDownload             bool  `protobuf:"varint,12,opt,name=RunDownload,proto3" json:"RunDownload,omitempty"`
}

func (x *DownloadInfoResponse) Reset() {
	*x = DownloadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadInfoResponse) ProtoMessage() {}

func (x *DownloadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadInfoResponse.ProtoReflect.Descriptor instead.
func (*DownloadInfoResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *DownloadInfoResponse) GetNewAccounts() int32 {
	if x != nil {
		return x.NewAccounts
	}
	return 0
}

func (x *DownloadInfoResponse) GetUpdateAccounts() int32 {
	if x != nil {
		return x.UpdateAccounts
	}
	return 0
}

func (x *DownloadInfoResponse) GetSameAccounts() int32 {
	if x != nil {
		return x.SameAccounts
	}
	return 0
}

func (x *DownloadInfoResponse) GetMatchingAccounts() int32 {
	if x != nil {
		return x.MatchingAccounts
	}
	return 0
}

func (x *DownloadInfoResponse) GetPhotosNow() int32 {
	if x != nil {
		return x.PhotosNow
	}
	return 0
}

func (x *DownloadInfoResponse) GetCountOfDownloadedPhotos() int32 {
	if x != nil {
		return x.CountOfDownloadedPhotos
	}
	return 0
}

func (x *DownloadInfoResponse) GetCountOfSamePhotos() int32 {
	if x != nil {
		return x.CountOfSamePhotos
	}
	return 0
}

func (x *DownloadInfoResponse) GetCountOfMissingPhotos() int32 {
	if x != nil {
		return x.CountOfMissingPhotos
	}
	return 0
}

func (x *DownloadInfoResponse) GetMatchingNNPhotosCount() int32 {
	if x != nil {
		return x.MatchingNNPhotosCount
	}
	return 0
}

func (x *DownloadInfoResponse) GetErrPhotosCount() int32 {
	if x != nil {
		return x.ErrPhotosCount
	}
	return 0
}

func (x *DownloadInfoResponse) GetSuccessDownload() bool {
	if x != nil {
		return x.SuccessDownload
	}
	return false
}

func (x *DownloadInfoResponse) GetRunDownload() bool {
	if x != nil {
		return x.RunDownload
	}
	return false
}

type GetFaceDetectRunInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceDetectRun bool `protobuf:"varint,1,opt,name=FaceDetectRun,proto3" json:"FaceDetectRun,omitempty"`
}

func (x *GetFaceDetectRunInfoResponse) Reset() {
	*x = GetFaceDetectRunInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFaceDetectRunInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFaceDetectRunInfoResponse) ProtoMessage() {}

func (x *GetFaceDetectRunInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFaceDetectRunInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFaceDetectRunInfoResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *GetFaceDetectRunInfoResponse) GetFaceDetectRun() bool {
	if x != nil {
		return x.FaceDetectRun
	}
	return false
}

type GetLoadingPhotosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrueNew    bool   `protobuf:"varint,1,opt,name=TrueNew,proto3" json:"TrueNew,omitempty"`
	TruePhoto  []byte `protobuf:"bytes,2,opt,name=TruePhoto,proto3" json:"TruePhoto,omitempty"`
	FalseNew   bool   `protobuf:"varint,3,opt,name=FalseNew,proto3" json:"FalseNew,omitempty"`
	FalsePhoto []byte `protobuf:"bytes,4,opt,name=FalsePhoto,proto3" json:"FalsePhoto,omitempty"`
}

func (x *GetLoadingPhotosResponse) Reset() {
	*x = GetLoadingPhotosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoadingPhotosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadingPhotosResponse) ProtoMessage() {}

func (x *GetLoadingPhotosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadingPhotosResponse.ProtoReflect.Descriptor instead.
func (*GetLoadingPhotosResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetLoadingPhotosResponse) GetTrueNew() bool {
	if x != nil {
		return x.TrueNew
	}
	return false
}

func (x *GetLoadingPhotosResponse) GetTruePhoto() []byte {
	if x != nil {
		return x.TruePhoto
	}
	return nil
}

func (x *GetLoadingPhotosResponse) GetFalseNew() bool {
	if x != nil {
		return x.FalseNew
	}
	return false
}

func (x *GetLoadingPhotosResponse) GetFalsePhoto() []byte {
	if x != nil {
		return x.FalsePhoto
	}
	return nil
}

type DrawBoxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set     bool `protobuf:"varint,1,opt,name=Set,proto3" json:"Set,omitempty"`
	DrawBox bool `protobuf:"varint,2,opt,name=DrawBox,proto3" json:"DrawBox,omitempty"`
}

func (x *DrawBoxRequest) Reset() {
	*x = DrawBoxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawBoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawBoxRequest) ProtoMessage() {}

func (x *DrawBoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawBoxRequest.ProtoReflect.Descriptor instead.
func (*DrawBoxRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *DrawBoxRequest) GetSet() bool {
	if x != nil {
		return x.Set
	}
	return false
}

func (x *DrawBoxRequest) GetDrawBox() bool {
	if x != nil {
		return x.DrawBox
	}
	return false
}

type TrueFalse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boolean bool `protobuf:"varint,1,opt,name=Boolean,proto3" json:"Boolean,omitempty"`
}

func (x *TrueFalse) Reset() {
	*x = TrueFalse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrueFalse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrueFalse) ProtoMessage() {}

func (x *TrueFalse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrueFalse.ProtoReflect.Descriptor instead.
func (*TrueFalse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *TrueFalse) GetBoolean() bool {
	if x != nil {
		return x.Boolean
	}
	return false
}

type PassOrIgnoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set  bool `protobuf:"varint,1,opt,name=Set,proto3" json:"Set,omitempty"`
	Pass bool `protobuf:"varint,2,opt,name=Pass,proto3" json:"Pass,omitempty"`
}

func (x *PassOrIgnoreRequest) Reset() {
	*x = PassOrIgnoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassOrIgnoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassOrIgnoreRequest) ProtoMessage() {}

func (x *PassOrIgnoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassOrIgnoreRequest.ProtoReflect.Descriptor instead.
func (*PassOrIgnoreRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *PassOrIgnoreRequest) GetSet() bool {
	if x != nil {
		return x.Set
	}
	return false
}

func (x *PassOrIgnoreRequest) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

type PassOrIgnoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pass bool `protobuf:"varint,1,opt,name=Pass,proto3" json:"Pass,omitempty"`
}

func (x *PassOrIgnoreResponse) Reset() {
	*x = PassOrIgnoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassOrIgnoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassOrIgnoreResponse) ProtoMessage() {}

func (x *PassOrIgnoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassOrIgnoreResponse.ProtoReflect.Descriptor instead.
func (*PassOrIgnoreResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *PassOrIgnoreResponse) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

type SetLikeToNullLastNUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountLastUsers int32 `protobuf:"varint,1,opt,name=countLastUsers,proto3" json:"countLastUsers,omitempty"`
}

func (x *SetLikeToNullLastNUsers) Reset() {
	*x = SetLikeToNullLastNUsers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLikeToNullLastNUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLikeToNullLastNUsers) ProtoMessage() {}

func (x *SetLikeToNullLastNUsers) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLikeToNullLastNUsers.ProtoReflect.Descriptor instead.
func (*SetLikeToNullLastNUsers) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *SetLikeToNullLastNUsers) GetCountLastUsers() int32 {
	if x != nil {
		return x.CountLastUsers
	}
	return 0
}

type PossibilityDeleteLastLikes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Possibility bool `protobuf:"varint,1,opt,name=Possibility,proto3" json:"Possibility,omitempty"`
}

func (x *PossibilityDeleteLastLikes) Reset() {
	*x = PossibilityDeleteLastLikes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PossibilityDeleteLastLikes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PossibilityDeleteLastLikes) ProtoMessage() {}

func (x *PossibilityDeleteLastLikes) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PossibilityDeleteLastLikes.ProtoReflect.Descriptor instead.
func (*PossibilityDeleteLastLikes) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *PossibilityDeleteLastLikes) GetPossibility() bool {
	if x != nil {
		return x.Possibility
	}
	return false
}

type PredictUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *PredictUserRequest) Reset() {
	*x = PredictUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictUserRequest) ProtoMessage() {}

func (x *PredictUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictUserRequest.ProtoReflect.Descriptor instead.
func (*PredictUserRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *PredictUserRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PredictUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int32   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	LikePercent    float32 `protobuf:"fixed32,2,opt,name=LikePercent,proto3" json:"LikePercent,omitempty"`
	DislikePercent float32 `protobuf:"fixed32,3,opt,name=DislikePercent,proto3" json:"DislikePercent,omitempty"`
}

func (x *PredictUserResponse) Reset() {
	*x = PredictUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictUserResponse) ProtoMessage() {}

func (x *PredictUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictUserResponse.ProtoReflect.Descriptor instead.
func (*PredictUserResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *PredictUserResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PredictUserResponse) GetLikePercent() float32 {
	if x != nil {
		return x.LikePercent
	}
	return 0
}

func (x *PredictUserResponse) GetDislikePercent() float32 {
	if x != nil {
		return x.DislikePercent
	}
	return 0
}

type TrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountOfEpochs int32 `protobuf:"varint,1,opt,name=CountOfEpochs,proto3" json:"CountOfEpochs,omitempty"`
	AlignDS       bool  `protobuf:"varint,2,opt,name=AlignDS,proto3" json:"AlignDS,omitempty"`
}

func (x *TrainRequest) Reset() {
	*x = TrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainRequest) ProtoMessage() {}

func (x *TrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainRequest.ProtoReflect.Descriptor instead.
func (*TrainRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *TrainRequest) GetCountOfEpochs() int32 {
	if x != nil {
		return x.CountOfEpochs
	}
	return 0
}

func (x *TrainRequest) GetAlignDS() bool {
	if x != nil {
		return x.AlignDS
	}
	return false
}

type TrainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainingNow   bool  `protobuf:"varint,1,opt,name=TrainingNow,proto3" json:"TrainingNow,omitempty"`
	AllEpochCount int32 `protobuf:"varint,2,opt,name=AllEpochCount,proto3" json:"AllEpochCount,omitempty"`
	AllBatchCount int32 `protobuf:"varint,3,opt,name=AllBatchCount,proto3" json:"AllBatchCount,omitempty"`
}

func (x *TrainResponse) Reset() {
	*x = TrainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainResponse) ProtoMessage() {}

func (x *TrainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainResponse.ProtoReflect.Descriptor instead.
func (*TrainResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *TrainResponse) GetTrainingNow() bool {
	if x != nil {
		return x.TrainingNow
	}
	return false
}

func (x *TrainResponse) GetAllEpochCount() int32 {
	if x != nil {
		return x.AllEpochCount
	}
	return 0
}

func (x *TrainResponse) GetAllBatchCount() int32 {
	if x != nil {
		return x.AllBatchCount
	}
	return 0
}

type FitStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch    int32 `protobuf:"varint,1,opt,name=Epoch,proto3" json:"Epoch,omitempty"`
	Batch    int32 `protobuf:"varint,2,opt,name=Batch,proto3" json:"Batch,omitempty"`
	Training bool  `protobuf:"varint,3,opt,name=Training,proto3" json:"Training,omitempty"`
}

func (x *FitStatusResponse) Reset() {
	*x = FitStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FitStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FitStatusResponse) ProtoMessage() {}

func (x *FitStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FitStatusResponse.ProtoReflect.Descriptor instead.
func (*FitStatusResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *FitStatusResponse) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *FitStatusResponse) GetBatch() int32 {
	if x != nil {
		return x.Batch
	}
	return 0
}

func (x *FitStatusResponse) GetTraining() bool {
	if x != nil {
		return x.Training
	}
	return false
}

type AutoLikeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photos          [][]byte `protobuf:"bytes,1,rep,name=Photos,proto3" json:"Photos,omitempty"`
	LikePercent     float32  `protobuf:"fixed32,2,opt,name=LikePercent,proto3" json:"LikePercent,omitempty"`
	DislikePercent  float32  `protobuf:"fixed32,3,opt,name=DislikePercent,proto3" json:"DislikePercent,omitempty"`
	SuccessAutoLike bool     `protobuf:"varint,4,opt,name=SuccessAutoLike,proto3" json:"SuccessAutoLike,omitempty"`
	ErrorAutoLike   bool     `protobuf:"varint,5,opt,name=ErrorAutoLike,proto3" json:"ErrorAutoLike,omitempty"`
}

func (x *AutoLikeResponse) Reset() {
	*x = AutoLikeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoLikeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoLikeResponse) ProtoMessage() {}

func (x *AutoLikeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoLikeResponse.ProtoReflect.Descriptor instead.
func (*AutoLikeResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *AutoLikeResponse) GetPhotos() [][]byte {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *AutoLikeResponse) GetLikePercent() float32 {
	if x != nil {
		return x.LikePercent
	}
	return 0
}

func (x *AutoLikeResponse) GetDislikePercent() float32 {
	if x != nil {
		return x.DislikePercent
	}
	return 0
}

func (x *AutoLikeResponse) GetSuccessAutoLike() bool {
	if x != nil {
		return x.SuccessAutoLike
	}
	return false
}

func (x *AutoLikeResponse) GetErrorAutoLike() bool {
	if x != nil {
		return x.ErrorAutoLike
	}
	return false
}

type GetAutoLikeIsRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoLikeRun   bool  `protobuf:"varint,1,opt,name=AutoLikeRun,proto3" json:"AutoLikeRun,omitempty"`
	LikedCount    int32 `protobuf:"varint,2,opt,name=LikedCount,proto3" json:"LikedCount,omitempty"`
	DislikedCount int32 `protobuf:"varint,3,opt,name=DislikedCount,proto3" json:"DislikedCount,omitempty"`
}

func (x *GetAutoLikeIsRunResponse) Reset() {
	*x = GetAutoLikeIsRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoLikeIsRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoLikeIsRunResponse) ProtoMessage() {}

func (x *GetAutoLikeIsRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoLikeIsRunResponse.ProtoReflect.Descriptor instead.
func (*GetAutoLikeIsRunResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *GetAutoLikeIsRunResponse) GetAutoLikeRun() bool {
	if x != nil {
		return x.AutoLikeRun
	}
	return false
}

func (x *GetAutoLikeIsRunResponse) GetLikedCount() int32 {
	if x != nil {
		return x.LikedCount
	}
	return 0
}

func (x *GetAutoLikeIsRunResponse) GetDislikedCount() int32 {
	if x != nil {
		return x.DislikedCount
	}
	return 0
}

type GetWeigthNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeigthName string `protobuf:"bytes,1,opt,name=WeigthName,proto3" json:"WeigthName,omitempty"`
}

func (x *GetWeigthNameResponse) Reset() {
	*x = GetWeigthNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeigthNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeigthNameResponse) ProtoMessage() {}

func (x *GetWeigthNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeigthNameResponse.ProtoReflect.Descriptor instead.
func (*GetWeigthNameResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{27}
}

func (x *GetWeigthNameResponse) GetWeigthName() string {
	if x != nil {
		return x.WeigthName
	}
	return ""
}

type LikeDislikeCountPhotosFromDBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeCount    int32 `protobuf:"varint,1,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`
	DislikeCount int32 `protobuf:"varint,2,opt,name=DislikeCount,proto3" json:"DislikeCount,omitempty"`
}

func (x *LikeDislikeCountPhotosFromDBResponse) Reset() {
	*x = LikeDislikeCountPhotosFromDBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeDislikeCountPhotosFromDBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeDislikeCountPhotosFromDBResponse) ProtoMessage() {}

func (x *LikeDislikeCountPhotosFromDBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeDislikeCountPhotosFromDBResponse.ProtoReflect.Descriptor instead.
func (*LikeDislikeCountPhotosFromDBResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{28}
}

func (x *LikeDislikeCountPhotosFromDBResponse) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *LikeDislikeCountPhotosFromDBResponse) GetDislikeCount() int32 {
	if x != nil {
		return x.DislikeCount
	}
	return 0
}

type GetTokenTutorialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenTutorial []byte `protobuf:"bytes,1,opt,name=TokenTutorial,proto3" json:"TokenTutorial,omitempty"`
}

func (x *GetTokenTutorialResponse) Reset() {
	*x = GetTokenTutorialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenTutorialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenTutorialResponse) ProtoMessage() {}

func (x *GetTokenTutorialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenTutorialResponse.ProtoReflect.Descriptor instead.
func (*GetTokenTutorialResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpc_proto_rawDescGZIP(), []int{29}
}

func (x *GetTokenTutorialResponse) GetTokenTutorial() []byte {
	if x != nil {
		return x.TokenTutorial
	}
	return nil
}

var File_grpctransport_grpc_proto protoreflect.FileDescriptor

var file_grpctransport_grpc_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x95, 0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x4e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x4e, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x36, 0x0a, 0x16, 0x4e, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x16, 0x4e, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x4e, 0x4e, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1c, 0x4e,
	0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x4e,
	0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x64, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1a, 0x4e, 0x4e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x64,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x75, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x52, 0x75, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x27, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x34, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x30, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x50, 0x69, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x03, 0x50, 0x69, 0x63, 0x22, 0x55,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73,
	0x6c, 0x69, 0x6b, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x4e, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x4e, 0x4e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x75, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x75,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x75, 0x6e, 0x22, 0x94, 0x04, 0x0a, 0x14, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x4e, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x4e, 0x6f, 0x77, 0x12, 0x38, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x53, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x66, 0x53, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x12, 0x34, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4e, 0x4e, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x4e, 0x4e, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x72, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x45, 0x72, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x52,
	0x75, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x44, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e,
	0x22, 0x8e, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x72, 0x75, 0x65, 0x4e, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x54, 0x72, 0x75, 0x65, 0x4e, 0x65, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x54, 0x72, 0x75, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x4e, 0x65,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x4e, 0x65,
	0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x22, 0x3c, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x77, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x53, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x72, 0x61, 0x77, 0x42, 0x6f, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x44, 0x72, 0x61, 0x77, 0x42, 0x6f, 0x78, 0x22,
	0x25, 0x0a, 0x09, 0x54, 0x72, 0x75, 0x65, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x42,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x3b, 0x0a, 0x13, 0x50, 0x61, 0x73, 0x73, 0x4f, 0x72,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x50,
	0x61, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x50, 0x61, 0x73, 0x73, 0x4f, 0x72, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x50, 0x61, 0x73, 0x73, 0x22,
	0x41, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x4e, 0x75, 0x6c, 0x6c,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x3e, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0x2c, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x77, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x66, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x44, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x44, 0x53, 0x22, 0x7d, 0x0a, 0x0d, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x0d,
	0x41, 0x6c, 0x6c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x6c, 0x6c, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x6c, 0x6c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x46, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69,
	0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x44, 0x69,
	0x73, 0x6c, 0x69, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41,
	0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x73, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x75, 0x74,
	0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x75, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4c,
	0x69, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x37, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67, 0x74, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x65,
	0x69, 0x67, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x57, 0x65, 0x69, 0x67, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x24, 0x4c, 0x69,
	0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x32, 0xef, 0x12, 0x0a, 0x0b, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x27,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x07, 0x44, 0x72, 0x61, 0x77, 0x42, 0x6f, 0x78, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x42,
	0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x75, 0x65, 0x46, 0x61,
	0x6c, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x50, 0x61, 0x73, 0x73, 0x4f, 0x72, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x4f, 0x72, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x4f, 0x72,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4c,
	0x69, 0x6b, 0x65, 0x54, 0x6f, 0x4e, 0x75, 0x6c, 0x6c, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x12, 0x74, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x4e, 0x75, 0x6c,
	0x6c, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x29, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x18, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x1c, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x12, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x33, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x77, 0x12, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x69, 0x67, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67, 0x74, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1b, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x4c, 0x69, 0x6b, 0x65, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69,
	0x6b, 0x65, 0x49, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x6d, 0x0a, 0x1d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x2b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x65, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x55, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x75,
	0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x73, 0x68, 0x61, 0x6e, 0x73, 0x6b, 0x69,
	0x79, 0x2f, 0x74, 0x6e, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpctransport_grpc_proto_rawDescOnce sync.Once
	file_grpctransport_grpc_proto_rawDescData = file_grpctransport_grpc_proto_rawDesc
)

func file_grpctransport_grpc_proto_rawDescGZIP() []byte {
	file_grpctransport_grpc_proto_rawDescOnce.Do(func() {
		file_grpctransport_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpctransport_grpc_proto_rawDescData)
	})
	return file_grpctransport_grpc_proto_rawDescData
}

var file_grpctransport_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_grpctransport_grpc_proto_goTypes = []interface{}{
	(*EmptyMessage)(nil),                         // 0: grpctransport.EmptyMessage
	(*GetTokenResponse)(nil),                     // 1: grpctransport.GetTokenResponse
	(*GetDownloadInfoFromDBResponse)(nil),        // 2: grpctransport.GetDownloadInfoFromDBResponse
	(*SetTokenRequest)(nil),                      // 3: grpctransport.SetTokenRequest
	(*SetTokenResponse)(nil),                     // 4: grpctransport.SetTokenResponse
	(*User)(nil),                                 // 5: grpctransport.User
	(*GetUsersRequest)(nil),                      // 6: grpctransport.GetUsersRequest
	(*GetUsersResponse)(nil),                     // 7: grpctransport.GetUsersResponse
	(*LikeDislikeRequest)(nil),                   // 8: grpctransport.LikeDislikeRequest
	(*SetDownloadPhotosRequest)(nil),             // 9: grpctransport.SetDownloadPhotosRequest
	(*SetDownloadPhotosResponse)(nil),            // 10: grpctransport.SetDownloadPhotosResponse
	(*DownloadInfoResponse)(nil),                 // 11: grpctransport.DownloadInfoResponse
	(*GetFaceDetectRunInfoResponse)(nil),         // 12: grpctransport.GetFaceDetectRunInfoResponse
	(*GetLoadingPhotosResponse)(nil),             // 13: grpctransport.GetLoadingPhotosResponse
	(*DrawBoxRequest)(nil),                       // 14: grpctransport.DrawBoxRequest
	(*TrueFalse)(nil),                            // 15: grpctransport.TrueFalse
	(*PassOrIgnoreRequest)(nil),                  // 16: grpctransport.PassOrIgnoreRequest
	(*PassOrIgnoreResponse)(nil),                 // 17: grpctransport.PassOrIgnoreResponse
	(*SetLikeToNullLastNUsers)(nil),              // 18: grpctransport.SetLikeToNullLastNUsers
	(*PossibilityDeleteLastLikes)(nil),           // 19: grpctransport.PossibilityDeleteLastLikes
	(*PredictUserRequest)(nil),                   // 20: grpctransport.PredictUserRequest
	(*PredictUserResponse)(nil),                  // 21: grpctransport.PredictUserResponse
	(*TrainRequest)(nil),                         // 22: grpctransport.TrainRequest
	(*TrainResponse)(nil),                        // 23: grpctransport.TrainResponse
	(*FitStatusResponse)(nil),                    // 24: grpctransport.FitStatusResponse
	(*AutoLikeResponse)(nil),                     // 25: grpctransport.AutoLikeResponse
	(*GetAutoLikeIsRunResponse)(nil),             // 26: grpctransport.GetAutoLikeIsRunResponse
	(*GetWeigthNameResponse)(nil),                // 27: grpctransport.GetWeigthNameResponse
	(*LikeDislikeCountPhotosFromDBResponse)(nil), // 28: grpctransport.LikeDislikeCountPhotosFromDBResponse
	(*GetTokenTutorialResponse)(nil),             // 29: grpctransport.GetTokenTutorialResponse
}
var file_grpctransport_grpc_proto_depIdxs = []int32{
	5,  // 0: grpctransport.GetUsersResponse.Users:type_name -> grpctransport.User
	0,  // 1: grpctransport.GrpcService.GetToken:input_type -> grpctransport.EmptyMessage
	3,  // 2: grpctransport.GrpcService.SetToken:input_type -> grpctransport.SetTokenRequest
	0,  // 3: grpctransport.GrpcService.GetDownloadedInfoFromDB:input_type -> grpctransport.EmptyMessage
	6,  // 4: grpctransport.GrpcService.GetUsers:input_type -> grpctransport.GetUsersRequest
	8,  // 5: grpctransport.GrpcService.LikeDislike:input_type -> grpctransport.LikeDislikeRequest
	9,  // 6: grpctransport.GrpcService.SetDownloadPhotos:input_type -> grpctransport.SetDownloadPhotosRequest
	0,  // 7: grpctransport.GrpcService.StopDownload:input_type -> grpctransport.EmptyMessage
	14, // 8: grpctransport.GrpcService.DrawBox:input_type -> grpctransport.DrawBoxRequest
	16, // 9: grpctransport.GrpcService.PassOrIgnore:input_type -> grpctransport.PassOrIgnoreRequest
	20, // 10: grpctransport.GrpcService.PredictUser:input_type -> grpctransport.PredictUserRequest
	18, // 11: grpctransport.GrpcService.DeleteLastLikes:input_type -> grpctransport.SetLikeToNullLastNUsers
	18, // 12: grpctransport.GrpcService.GetPossibilityDeleteLastLikes:input_type -> grpctransport.SetLikeToNullLastNUsers
	0,  // 13: grpctransport.GrpcService.DeleteAllLikes:input_type -> grpctransport.EmptyMessage
	0,  // 14: grpctransport.GrpcService.PermanentlyDeleteAllInfo:input_type -> grpctransport.EmptyMessage
	0,  // 15: grpctransport.GrpcService.LikeDislikeCountPhotosFromDB:input_type -> grpctransport.EmptyMessage
	0,  // 16: grpctransport.GrpcService.GetTokenTutorial:input_type -> grpctransport.EmptyMessage
	22, // 17: grpctransport.GrpcService.StartTrain:input_type -> grpctransport.TrainRequest
	0,  // 18: grpctransport.GrpcService.GetTrainingNow:input_type -> grpctransport.EmptyMessage
	0,  // 19: grpctransport.GrpcService.GetWeigthName:input_type -> grpctransport.EmptyMessage
	0,  // 20: grpctransport.GrpcService.RunAutoLike:input_type -> grpctransport.EmptyMessage
	0,  // 21: grpctransport.GrpcService.StopAutoLike:input_type -> grpctransport.EmptyMessage
	0,  // 22: grpctransport.GrpcService.GetAutoLikeIsRun:input_type -> grpctransport.EmptyMessage
	0,  // 23: grpctransport.GrpcService.StreamingDownloadInfo:input_type -> grpctransport.EmptyMessage
	0,  // 24: grpctransport.GrpcService.StreamingGetFaceDetectRunInfo:input_type -> grpctransport.EmptyMessage
	0,  // 25: grpctransport.GrpcService.StreamingGetLoadingPhotos:input_type -> grpctransport.EmptyMessage
	0,  // 26: grpctransport.GrpcService.StreamingTrainStatus:input_type -> grpctransport.EmptyMessage
	0,  // 27: grpctransport.GrpcService.StreamingAutoLike:input_type -> grpctransport.EmptyMessage
	1,  // 28: grpctransport.GrpcService.GetToken:output_type -> grpctransport.GetTokenResponse
	4,  // 29: grpctransport.GrpcService.SetToken:output_type -> grpctransport.SetTokenResponse
	2,  // 30: grpctransport.GrpcService.GetDownloadedInfoFromDB:output_type -> grpctransport.GetDownloadInfoFromDBResponse
	7,  // 31: grpctransport.GrpcService.GetUsers:output_type -> grpctransport.GetUsersResponse
	0,  // 32: grpctransport.GrpcService.LikeDislike:output_type -> grpctransport.EmptyMessage
	10, // 33: grpctransport.GrpcService.SetDownloadPhotos:output_type -> grpctransport.SetDownloadPhotosResponse
	0,  // 34: grpctransport.GrpcService.StopDownload:output_type -> grpctransport.EmptyMessage
	15, // 35: grpctransport.GrpcService.DrawBox:output_type -> grpctransport.TrueFalse
	17, // 36: grpctransport.GrpcService.PassOrIgnore:output_type -> grpctransport.PassOrIgnoreResponse
	21, // 37: grpctransport.GrpcService.PredictUser:output_type -> grpctransport.PredictUserResponse
	0,  // 38: grpctransport.GrpcService.DeleteLastLikes:output_type -> grpctransport.EmptyMessage
	19, // 39: grpctransport.GrpcService.GetPossibilityDeleteLastLikes:output_type -> grpctransport.PossibilityDeleteLastLikes
	0,  // 40: grpctransport.GrpcService.DeleteAllLikes:output_type -> grpctransport.EmptyMessage
	0,  // 41: grpctransport.GrpcService.PermanentlyDeleteAllInfo:output_type -> grpctransport.EmptyMessage
	28, // 42: grpctransport.GrpcService.LikeDislikeCountPhotosFromDB:output_type -> grpctransport.LikeDislikeCountPhotosFromDBResponse
	29, // 43: grpctransport.GrpcService.GetTokenTutorial:output_type -> grpctransport.GetTokenTutorialResponse
	23, // 44: grpctransport.GrpcService.StartTrain:output_type -> grpctransport.TrainResponse
	23, // 45: grpctransport.GrpcService.GetTrainingNow:output_type -> grpctransport.TrainResponse
	27, // 46: grpctransport.GrpcService.GetWeigthName:output_type -> grpctransport.GetWeigthNameResponse
	0,  // 47: grpctransport.GrpcService.RunAutoLike:output_type -> grpctransport.EmptyMessage
	0,  // 48: grpctransport.GrpcService.StopAutoLike:output_type -> grpctransport.EmptyMessage
	26, // 49: grpctransport.GrpcService.GetAutoLikeIsRun:output_type -> grpctransport.GetAutoLikeIsRunResponse
	11, // 50: grpctransport.GrpcService.StreamingDownloadInfo:output_type -> grpctransport.DownloadInfoResponse
	12, // 51: grpctransport.GrpcService.StreamingGetFaceDetectRunInfo:output_type -> grpctransport.GetFaceDetectRunInfoResponse
	13, // 52: grpctransport.GrpcService.StreamingGetLoadingPhotos:output_type -> grpctransport.GetLoadingPhotosResponse
	24, // 53: grpctransport.GrpcService.StreamingTrainStatus:output_type -> grpctransport.FitStatusResponse
	25, // 54: grpctransport.GrpcService.StreamingAutoLike:output_type -> grpctransport.AutoLikeResponse
	28, // [28:55] is the sub-list for method output_type
	1,  // [1:28] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_grpctransport_grpc_proto_init() }
func file_grpctransport_grpc_proto_init() {
	if File_grpctransport_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpctransport_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadInfoFromDBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeDislikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDownloadPhotosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDownloadPhotosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFaceDetectRunInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoadingPhotosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawBoxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrueFalse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassOrIgnoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassOrIgnoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLikeToNullLastNUsers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PossibilityDeleteLastLikes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FitStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoLikeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoLikeIsRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWeigthNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeDislikeCountPhotosFromDBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenTutorialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpctransport_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpctransport_grpc_proto_goTypes,
		DependencyIndexes: file_grpctransport_grpc_proto_depIdxs,
		MessageInfos:      file_grpctransport_grpc_proto_msgTypes,
	}.Build()
	File_grpctransport_grpc_proto = out.File
	file_grpctransport_grpc_proto_rawDesc = nil
	file_grpctransport_grpc_proto_goTypes = nil
	file_grpctransport_grpc_proto_depIdxs = nil
}
