// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: grpctransport/grpcnn.proto

package grpctransport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FitOrPredict int32

const (
	FitOrPredict_FITORPREDICT FitOrPredict = 0
	FitOrPredict_FIT          FitOrPredict = 1
	FitOrPredict_PREDICT      FitOrPredict = 2
)

// Enum value maps for FitOrPredict.
var (
	FitOrPredict_name = map[int32]string{
		0: "FITORPREDICT",
		1: "FIT",
		2: "PREDICT",
	}
	FitOrPredict_value = map[string]int32{
		"FITORPREDICT": 0,
		"FIT":          1,
		"PREDICT":      2,
	}
)

func (x FitOrPredict) Enum() *FitOrPredict {
	p := new(FitOrPredict)
	*p = x
	return p
}

func (x FitOrPredict) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FitOrPredict) Descriptor() protoreflect.EnumDescriptor {
	return file_grpctransport_grpcnn_proto_enumTypes[0].Descriptor()
}

func (FitOrPredict) Type() protoreflect.EnumType {
	return &file_grpctransport_grpcnn_proto_enumTypes[0]
}

func (x FitOrPredict) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FitOrPredict.Descriptor instead.
func (FitOrPredict) EnumDescriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{0}
}

type LikeDislike int32

const (
	LikeDislike_LIKEDISLIKE LikeDislike = 0
	LikeDislike_LIKE        LikeDislike = 1
	LikeDislike_DISLIKE     LikeDislike = 2
)

// Enum value maps for LikeDislike.
var (
	LikeDislike_name = map[int32]string{
		0: "LIKEDISLIKE",
		1: "LIKE",
		2: "DISLIKE",
	}
	LikeDislike_value = map[string]int32{
		"LIKEDISLIKE": 0,
		"LIKE":        1,
		"DISLIKE":     2,
	}
)

func (x LikeDislike) Enum() *LikeDislike {
	p := new(LikeDislike)
	*p = x
	return p
}

func (x LikeDislike) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LikeDislike) Descriptor() protoreflect.EnumDescriptor {
	return file_grpctransport_grpcnn_proto_enumTypes[1].Descriptor()
}

func (LikeDislike) Type() protoreflect.EnumType {
	return &file_grpctransport_grpcnn_proto_enumTypes[1]
}

func (x LikeDislike) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LikeDislike.Descriptor instead.
func (LikeDislike) EnumDescriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{1}
}

type EmptyMessageNN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyMessageNN) Reset() {
	*x = EmptyMessageNN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyMessageNN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessageNN) ProtoMessage() {}

func (x *EmptyMessageNN) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessageNN.ProtoReflect.Descriptor instead.
func (*EmptyMessageNN) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{0}
}

type Face struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X           int32   `protobuf:"varint,1,opt,name=X,proto3" json:"X,omitempty"`
	Y           int32   `protobuf:"varint,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Width       int32   `protobuf:"varint,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height      int32   `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	NoseX       int32   `protobuf:"varint,5,opt,name=NoseX,proto3" json:"NoseX,omitempty"`
	NoseY       int32   `protobuf:"varint,6,opt,name=NoseY,proto3" json:"NoseY,omitempty"`
	LeftEyeX    int32   `protobuf:"varint,7,opt,name=LeftEyeX,proto3" json:"LeftEyeX,omitempty"`
	LeftEyeY    int32   `protobuf:"varint,8,opt,name=LeftEyeY,proto3" json:"LeftEyeY,omitempty"`
	RightEyeX   int32   `protobuf:"varint,9,opt,name=RightEyeX,proto3" json:"RightEyeX,omitempty"`
	RightEyeY   int32   `protobuf:"varint,10,opt,name=RightEyeY,proto3" json:"RightEyeY,omitempty"`
	MouthLeftX  int32   `protobuf:"varint,11,opt,name=MouthLeftX,proto3" json:"MouthLeftX,omitempty"`
	MouthLeftY  int32   `protobuf:"varint,12,opt,name=MouthLeftY,proto3" json:"MouthLeftY,omitempty"`
	MouthRightX int32   `protobuf:"varint,13,opt,name=MouthRightX,proto3" json:"MouthRightX,omitempty"`
	MouthRightY int32   `protobuf:"varint,14,opt,name=MouthRightY,proto3" json:"MouthRightY,omitempty"`
	Confidence  float32 `protobuf:"fixed32,15,opt,name=Confidence,proto3" json:"Confidence,omitempty"`
}

func (x *Face) Reset() {
	*x = Face{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Face) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Face) ProtoMessage() {}

func (x *Face) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Face.ProtoReflect.Descriptor instead.
func (*Face) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{1}
}

func (x *Face) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Face) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Face) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Face) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Face) GetNoseX() int32 {
	if x != nil {
		return x.NoseX
	}
	return 0
}

func (x *Face) GetNoseY() int32 {
	if x != nil {
		return x.NoseY
	}
	return 0
}

func (x *Face) GetLeftEyeX() int32 {
	if x != nil {
		return x.LeftEyeX
	}
	return 0
}

func (x *Face) GetLeftEyeY() int32 {
	if x != nil {
		return x.LeftEyeY
	}
	return 0
}

func (x *Face) GetRightEyeX() int32 {
	if x != nil {
		return x.RightEyeX
	}
	return 0
}

func (x *Face) GetRightEyeY() int32 {
	if x != nil {
		return x.RightEyeY
	}
	return 0
}

func (x *Face) GetMouthLeftX() int32 {
	if x != nil {
		return x.MouthLeftX
	}
	return 0
}

func (x *Face) GetMouthLeftY() int32 {
	if x != nil {
		return x.MouthLeftY
	}
	return 0
}

func (x *Face) GetMouthRightX() int32 {
	if x != nil {
		return x.MouthRightX
	}
	return 0
}

func (x *Face) GetMouthRightY() int32 {
	if x != nil {
		return x.MouthRightY
	}
	return 0
}

func (x *Face) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type GetFaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoId    string `protobuf:"bytes,1,opt,name=PhotoId,proto3" json:"PhotoId,omitempty"`
	PhotoBytes []byte `protobuf:"bytes,2,opt,name=PhotoBytes,proto3" json:"PhotoBytes,omitempty"`
}

func (x *GetFaceRequest) Reset() {
	*x = GetFaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFaceRequest) ProtoMessage() {}

func (x *GetFaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFaceRequest.ProtoReflect.Descriptor instead.
func (*GetFaceRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{2}
}

func (x *GetFaceRequest) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *GetFaceRequest) GetPhotoBytes() []byte {
	if x != nil {
		return x.PhotoBytes
	}
	return nil
}

type GetFaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoId string  `protobuf:"bytes,1,opt,name=PhotoId,proto3" json:"PhotoId,omitempty"`
	Faces   []*Face `protobuf:"bytes,2,rep,name=Faces,proto3" json:"Faces,omitempty"`
}

func (x *GetFaceResponse) Reset() {
	*x = GetFaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFaceResponse) ProtoMessage() {}

func (x *GetFaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFaceResponse.ProtoReflect.Descriptor instead.
func (*GetFaceResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{3}
}

func (x *GetFaceResponse) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *GetFaceResponse) GetFaces() []*Face {
	if x != nil {
		return x.Faces
	}
	return nil
}

type PredictFromBytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PhotosBytes [][]byte `protobuf:"bytes,2,rep,name=PhotosBytes,proto3" json:"PhotosBytes,omitempty"`
}

func (x *PredictFromBytesRequest) Reset() {
	*x = PredictFromBytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PredictFromBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictFromBytesRequest) ProtoMessage() {}

func (x *PredictFromBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictFromBytesRequest.ProtoReflect.Descriptor instead.
func (*PredictFromBytesRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{4}
}

func (x *PredictFromBytesRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PredictFromBytesRequest) GetPhotosBytes() [][]byte {
	if x != nil {
		return x.PhotosBytes
	}
	return nil
}

type PhotosToModelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int32     `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PredictLikeDislike []float32 `protobuf:"fixed32,2,rep,packed,name=PredictLikeDislike,proto3" json:"PredictLikeDislike,omitempty"`
}

func (x *PhotosToModelResponse) Reset() {
	*x = PhotosToModelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotosToModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotosToModelResponse) ProtoMessage() {}

func (x *PhotosToModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotosToModelResponse.ProtoReflect.Descriptor instead.
func (*PhotosToModelResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{5}
}

func (x *PhotosToModelResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PhotosToModelResponse) GetPredictLikeDislike() []float32 {
	if x != nil {
		return x.PredictLikeDislike
	}
	return nil
}

type PhotoNameLike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoName string `protobuf:"bytes,1,opt,name=PhotoName,proto3" json:"PhotoName,omitempty"`
	Like      bool   `protobuf:"varint,2,opt,name=Like,proto3" json:"Like,omitempty"`
}

func (x *PhotoNameLike) Reset() {
	*x = PhotoNameLike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoNameLike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoNameLike) ProtoMessage() {}

func (x *PhotoNameLike) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoNameLike.ProtoReflect.Descriptor instead.
func (*PhotoNameLike) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{6}
}

func (x *PhotoNameLike) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *PhotoNameLike) GetLike() bool {
	if x != nil {
		return x.Like
	}
	return false
}

type FitAllToModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountOfEpochs         int32            `protobuf:"varint,1,opt,name=CountOfEpochs,proto3" json:"CountOfEpochs,omitempty"`
	PhotoNameLike         []*PhotoNameLike `protobuf:"bytes,2,rep,name=PhotoNameLike,proto3" json:"PhotoNameLike,omitempty"`
	PhotoNameLikeValidate []*PhotoNameLike `protobuf:"bytes,3,rep,name=PhotoNameLikeValidate,proto3" json:"PhotoNameLikeValidate,omitempty"`
}

func (x *FitAllToModelRequest) Reset() {
	*x = FitAllToModelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FitAllToModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FitAllToModelRequest) ProtoMessage() {}

func (x *FitAllToModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FitAllToModelRequest.ProtoReflect.Descriptor instead.
func (*FitAllToModelRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{7}
}

func (x *FitAllToModelRequest) GetCountOfEpochs() int32 {
	if x != nil {
		return x.CountOfEpochs
	}
	return 0
}

func (x *FitAllToModelRequest) GetPhotoNameLike() []*PhotoNameLike {
	if x != nil {
		return x.PhotoNameLike
	}
	return nil
}

func (x *FitAllToModelRequest) GetPhotoNameLikeValidate() []*PhotoNameLike {
	if x != nil {
		return x.PhotoNameLikeValidate
	}
	return nil
}

type FitStatusResponseNN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch int32 `protobuf:"varint,1,opt,name=Epoch,proto3" json:"Epoch,omitempty"`
	Batch int32 `protobuf:"varint,2,opt,name=Batch,proto3" json:"Batch,omitempty"`
}

func (x *FitStatusResponseNN) Reset() {
	*x = FitStatusResponseNN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FitStatusResponseNN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FitStatusResponseNN) ProtoMessage() {}

func (x *FitStatusResponseNN) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FitStatusResponseNN.ProtoReflect.Descriptor instead.
func (*FitStatusResponseNN) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{8}
}

func (x *FitStatusResponseNN) GetEpoch() int32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *FitStatusResponseNN) GetBatch() int32 {
	if x != nil {
		return x.Batch
	}
	return 0
}

type CutBackgroundAndValidFaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoBytes []byte `protobuf:"bytes,1,opt,name=PhotoBytes,proto3" json:"PhotoBytes,omitempty"`
}

func (x *CutBackgroundAndValidFaceRequest) Reset() {
	*x = CutBackgroundAndValidFaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CutBackgroundAndValidFaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CutBackgroundAndValidFaceRequest) ProtoMessage() {}

func (x *CutBackgroundAndValidFaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CutBackgroundAndValidFaceRequest.ProtoReflect.Descriptor instead.
func (*CutBackgroundAndValidFaceRequest) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{9}
}

func (x *CutBackgroundAndValidFaceRequest) GetPhotoBytes() []byte {
	if x != nil {
		return x.PhotoBytes
	}
	return nil
}

type CutBackgroundAndValidFaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoBytes []byte  `protobuf:"bytes,1,opt,name=PhotoBytes,proto3" json:"PhotoBytes,omitempty"`
	Valid      float32 `protobuf:"fixed32,2,opt,name=Valid,proto3" json:"Valid,omitempty"`
}

func (x *CutBackgroundAndValidFaceResponse) Reset() {
	*x = CutBackgroundAndValidFaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpctransport_grpcnn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CutBackgroundAndValidFaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CutBackgroundAndValidFaceResponse) ProtoMessage() {}

func (x *CutBackgroundAndValidFaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpctransport_grpcnn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CutBackgroundAndValidFaceResponse.ProtoReflect.Descriptor instead.
func (*CutBackgroundAndValidFaceResponse) Descriptor() ([]byte, []int) {
	return file_grpctransport_grpcnn_proto_rawDescGZIP(), []int{10}
}

func (x *CutBackgroundAndValidFaceResponse) GetPhotoBytes() []byte {
	if x != nil {
		return x.PhotoBytes
	}
	return nil
}

func (x *CutBackgroundAndValidFaceResponse) GetValid() float32 {
	if x != nil {
		return x.Valid
	}
	return 0
}

var File_grpctransport_grpcnn_proto protoreflect.FileDescriptor

var file_grpctransport_grpcnn_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x6e, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x4e, 0x22, 0x94, 0x03,
	0x0a, 0x04, 0x46, 0x61, 0x63, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x59, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x73, 0x65, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4e, 0x6f, 0x73, 0x65, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x73, 0x65, 0x59, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4e, 0x6f, 0x73, 0x65, 0x59, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x65, 0x66, 0x74, 0x45, 0x79, 0x65, 0x58, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x4c, 0x65, 0x66, 0x74, 0x45, 0x79, 0x65, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x65, 0x66, 0x74,
	0x45, 0x79, 0x65, 0x59, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x65, 0x66, 0x74,
	0x45, 0x79, 0x65, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79, 0x65,
	0x58, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79,
	0x65, 0x58, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79, 0x65, 0x59, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79, 0x65, 0x59,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x66, 0x74, 0x58, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x66, 0x74, 0x58,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x66, 0x74, 0x59, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x4c, 0x65, 0x66, 0x74, 0x59,
	0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x52, 0x69, 0x67, 0x68, 0x74, 0x58, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x58, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x59, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4d, 0x6f, 0x75, 0x74, 0x68, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x59, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x05, 0x46, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x52, 0x05, 0x46, 0x61, 0x63, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x17, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x5f, 0x0a,
	0x15, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x54, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x12, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73,
	0x6c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x12, 0x50, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0x41,
	0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4c, 0x69, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x4c, 0x69, 0x6b,
	0x65, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4f, 0x66, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x66, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73,
	0x12, 0x42, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x0d, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b,
	0x65, 0x52, 0x15, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6b, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x46, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x4e, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0x42, 0x0a, 0x20, 0x43,
	0x75, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x59, 0x0a, 0x21, 0x43, 0x75, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x2a, 0x36, 0x0a, 0x0c, 0x46, 0x69,
	0x74, 0x4f, 0x72, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49,
	0x54, 0x4f, 0x52, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x46, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x54,
	0x10, 0x02, 0x2a, 0x35, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x4b, 0x45, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x02, 0x32, 0xd4, 0x05, 0x0a, 0x0d, 0x47, 0x72,
	0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x4e, 0x12, 0x48, 0x0a, 0x06, 0x50,
	0x69, 0x6e, 0x67, 0x4e, 0x4e, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4e, 0x4e, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x4e, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x62, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x54, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x69,
	0x67, 0x74, 0x68, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x4e, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4e, 0x4e, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0d, 0x46, 0x69, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x4e, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x66, 0x46, 0x69, 0x74, 0x12, 0x1d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x4e, 0x1a, 0x22, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x4e,
	0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x19, 0x43, 0x75, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x61, 0x63, 0x65,
	0x12, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x43, 0x75, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x6e,
	0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x43, 0x75, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x07, 0x45, 0x78, 0x69, 0x74, 0x41, 0x70, 0x70,
	0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x4e, 0x1a,
	0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x4e, 0x22, 0x00,
	0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x61, 0x73, 0x68, 0x61, 0x6e, 0x73, 0x6b, 0x69, 0x79, 0x2f, 0x74, 0x6e, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x3b, 0x67, 0x72,
	0x70, 0x63, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_grpctransport_grpcnn_proto_rawDescOnce sync.Once
	file_grpctransport_grpcnn_proto_rawDescData = file_grpctransport_grpcnn_proto_rawDesc
)

func file_grpctransport_grpcnn_proto_rawDescGZIP() []byte {
	file_grpctransport_grpcnn_proto_rawDescOnce.Do(func() {
		file_grpctransport_grpcnn_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpctransport_grpcnn_proto_rawDescData)
	})
	return file_grpctransport_grpcnn_proto_rawDescData
}

var file_grpctransport_grpcnn_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grpctransport_grpcnn_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_grpctransport_grpcnn_proto_goTypes = []interface{}{
	(FitOrPredict)(0),                         // 0: grpctransport.FitOrPredict
	(LikeDislike)(0),                          // 1: grpctransport.LikeDislike
	(*EmptyMessageNN)(nil),                    // 2: grpctransport.EmptyMessageNN
	(*Face)(nil),                              // 3: grpctransport.Face
	(*GetFaceRequest)(nil),                    // 4: grpctransport.GetFaceRequest
	(*GetFaceResponse)(nil),                   // 5: grpctransport.GetFaceResponse
	(*PredictFromBytesRequest)(nil),           // 6: grpctransport.PredictFromBytesRequest
	(*PhotosToModelResponse)(nil),             // 7: grpctransport.PhotosToModelResponse
	(*PhotoNameLike)(nil),                     // 8: grpctransport.PhotoNameLike
	(*FitAllToModelRequest)(nil),              // 9: grpctransport.FitAllToModelRequest
	(*FitStatusResponseNN)(nil),               // 10: grpctransport.FitStatusResponseNN
	(*CutBackgroundAndValidFaceRequest)(nil),  // 11: grpctransport.CutBackgroundAndValidFaceRequest
	(*CutBackgroundAndValidFaceResponse)(nil), // 12: grpctransport.CutBackgroundAndValidFaceResponse
}
var file_grpctransport_grpcnn_proto_depIdxs = []int32{
	3,  // 0: grpctransport.GetFaceResponse.Faces:type_name -> grpctransport.Face
	8,  // 1: grpctransport.FitAllToModelRequest.PhotoNameLike:type_name -> grpctransport.PhotoNameLike
	8,  // 2: grpctransport.FitAllToModelRequest.PhotoNameLikeValidate:type_name -> grpctransport.PhotoNameLike
	2,  // 3: grpctransport.GrpcServiceNN.PingNN:input_type -> grpctransport.EmptyMessageNN
	4,  // 4: grpctransport.GrpcServiceNN.GetFace:input_type -> grpctransport.GetFaceRequest
	6,  // 5: grpctransport.GrpcServiceNN.PredictFromBytes:input_type -> grpctransport.PredictFromBytesRequest
	2,  // 6: grpctransport.GrpcServiceNN.LoadWeigths:input_type -> grpctransport.EmptyMessageNN
	9,  // 7: grpctransport.GrpcServiceNN.FitAllToModel:input_type -> grpctransport.FitAllToModelRequest
	2,  // 8: grpctransport.GrpcServiceNN.GetStatusOfFit:input_type -> grpctransport.EmptyMessageNN
	11, // 9: grpctransport.GrpcServiceNN.CutBackgroundAndValidFace:input_type -> grpctransport.CutBackgroundAndValidFaceRequest
	2,  // 10: grpctransport.GrpcServiceNN.ExitApp:input_type -> grpctransport.EmptyMessageNN
	2,  // 11: grpctransport.GrpcServiceNN.PingNN:output_type -> grpctransport.EmptyMessageNN
	5,  // 12: grpctransport.GrpcServiceNN.GetFace:output_type -> grpctransport.GetFaceResponse
	7,  // 13: grpctransport.GrpcServiceNN.PredictFromBytes:output_type -> grpctransport.PhotosToModelResponse
	2,  // 14: grpctransport.GrpcServiceNN.LoadWeigths:output_type -> grpctransport.EmptyMessageNN
	2,  // 15: grpctransport.GrpcServiceNN.FitAllToModel:output_type -> grpctransport.EmptyMessageNN
	10, // 16: grpctransport.GrpcServiceNN.GetStatusOfFit:output_type -> grpctransport.FitStatusResponseNN
	12, // 17: grpctransport.GrpcServiceNN.CutBackgroundAndValidFace:output_type -> grpctransport.CutBackgroundAndValidFaceResponse
	2,  // 18: grpctransport.GrpcServiceNN.ExitApp:output_type -> grpctransport.EmptyMessageNN
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_grpctransport_grpcnn_proto_init() }
func file_grpctransport_grpcnn_proto_init() {
	if File_grpctransport_grpcnn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpctransport_grpcnn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyMessageNN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Face); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PredictFromBytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotosToModelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoNameLike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FitAllToModelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FitStatusResponseNN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CutBackgroundAndValidFaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpctransport_grpcnn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CutBackgroundAndValidFaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpctransport_grpcnn_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpctransport_grpcnn_proto_goTypes,
		DependencyIndexes: file_grpctransport_grpcnn_proto_depIdxs,
		EnumInfos:         file_grpctransport_grpcnn_proto_enumTypes,
		MessageInfos:      file_grpctransport_grpcnn_proto_msgTypes,
	}.Build()
	File_grpctransport_grpcnn_proto = out.File
	file_grpctransport_grpcnn_proto_rawDesc = nil
	file_grpctransport_grpcnn_proto_goTypes = nil
	file_grpctransport_grpcnn_proto_depIdxs = nil
}
